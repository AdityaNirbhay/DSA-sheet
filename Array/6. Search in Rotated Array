Problem Link: https://leetcode.com/problems/search-in-rotated-sorted-array/


//DO REVISE


int search(vector<int>& nums, int target) {
        
        int start = 0, end = nums.size()-1;
        
        while(start<=end){
            int mid = (start+end)/2;
            
            if(nums[mid]==target) return mid;
            
            //check whether left side is sorted or not
            if(nums[start]<=nums[mid]){
                //Check whether the target is on the left side or not
                if(nums[mid]>=target && nums[start]<=target) end = mid-1;
                else start = mid+1;
            }
            //check whether right side is sorted or not
            else{
                if(nums[mid]<=target && nums[end]>=target) start = mid+1;
                else end = mid-1;
            }
        }
        return -1;
    }
